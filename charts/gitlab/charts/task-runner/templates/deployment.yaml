{{- if .Values.enabled }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
{{ include "gitlab.standardLabels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
{{ include "gitlab.certificates.initContainer" . | indent 8 }}
        - name: configure
          command: ['sh', '/config/configure']
          image: {{ .Values.init.image }}:{{ .Values.init.tag }}
          volumeMounts:
          - name: task-runner-config
            mountPath: /config
            readOnly: true
          - name: init-task-runner-secrets
            mountPath: /init-config
            readOnly: true
          - name: task-runner-secrets
            mountPath: /init-secrets
            readOnly: false
          resources:
{{ toYaml .Values.init.resources | indent 12 }}
{{- include "pullsecrets" .Values.image | indent 6}}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - /bin/bash
            - -c
            - cp /etc/gitlab/.s3cfg $HOME/.s3cfg && while sleep 3600; do :; done # alpine sleep has no infinity
          image: "{{ coalesce .Values.image.repository (include "image.repository" .) }}:{{ coalesce .Values.image.tag (include "gitlab.versionTag" . ) }}"
          {{ template "gitlab.imagePullPolicy" . }}
          env:
            - name: ARTIFACTS_BUCKET_NAME
              value: {{ .Values.global.appConfig.artifacts.bucket }}
            - name: REGISTRY_BUCKET_NAME
              value: {{ .Values.global.registry.bucket }}
            - name: LFS_BUCKET_NAME
              value: {{ .Values.global.appConfig.lfs.bucket }}
            - name: UPLOADS_BUCKET_NAME
              value: {{ .Values.global.appConfig.uploads.bucket }}
            - name: BACKUP_BUCKET_NAME
              value: {{ .Values.global.appConfig.backups.bucket }}
            - name: TMP_BUCKET_NAME
              value: {{ .Values.global.appConfig.backups.tmpBucket }}
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/var/opt/gitlab/config/gitlab/'
          volumeMounts:
            - name: task-runner-config
              mountPath: '/var/opt/gitlab/templates'
            - name: task-runner-secrets
              mountPath: '/etc/gitlab'
              readOnly: true
            - name: task-runner-secrets
              mountPath: /srv/gitlab/config/secrets.yml
              subPath: rails-secrets/secrets.yml
{{ include "gitlab.certificates.volumeMount" . | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: task-runner-config
        configMap:
          name: {{ template "fullname" . }}
      - name: init-task-runner-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: {{ template "gitlab.rails-secrets.secret" . }}
              items:
                - key: secrets.yml
                  path: rails-secrets/secrets.yml
          - secret:
              name: {{ template "gitlab.gitlab-shell.authToken.secret" . }}
              items:
                - key: {{ template "gitlab.gitlab-shell.authToken.key" . }}
                  path: shell/.gitlab_shell_secret
          - secret:
              name: {{ template "gitlab.gitaly.authToken.secret" . }}
              items:
                - key: {{ template "gitlab.gitaly.authToken.key" . }}
                  path: gitaly/gitaly_token
          - secret:
              name: {{ template "gitlab.redis.password.secret" . }}
              items:
                - key: {{ template "gitlab.redis.password.key" . }}
                  path: redis/password
          - secret:
              name: {{ template "gitlab.psql.password.secret" . }}
              items:
                - key: {{ template "gitlab.psql.password.key" . }}
                  path: postgres/psql-password
          - secret:
              name: {{ template "gitlab.registry.certificate.secret" . }}
              items:
                - key: registry-auth.key
                  path: registry/gitlab-registry.key
          - secret:
              {{- if .Values.global.minio.enabled }}
              name: {{ include "gitlab.minio.credentials.secret" . }}
              items:
                - key: accesskey
                  path: objectstorage/accesskey
                - key: secretkey
                  path: objectstorage/secretkey
          {{- else }}
              name: {{ required "A valid backups.objectStorage.config.secret is needed!" .Values.backups.objectStorage.config.secret }}
              items:
                - key: {{ default "config" .Values.backups.objectStorage.config.key }}
                  path: objectstorage/.s3cfg
          {{- end }}
          {{- if .Values.global.appConfig.lfs.connection }}
          - secret:
              name: {{ .Values.global.appConfig.lfs.connection.secret }}
              items:
                - key: {{ default "connection" .Values.global.appConfig.lfs.connection.key }}
                  path: objectstorage/lfs
          {{- end }}
      - name: task-runner-secrets
        emptyDir:
          medium: "Memory"
{{ include "gitlab.certificates.volumes" . | indent 6 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- end }}
